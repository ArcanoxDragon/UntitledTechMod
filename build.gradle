buildscript {
    repositories {
        jcenter()

        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_ver"
    }
}

apply plugin: 'kotlin'
apply plugin: 'net.minecraftforge.gradle.forge'

def configFile = file("build.properties")
def config = parseConfig(configFile)

version = "${config.version}.${config.build_number}"
group = config.group
archivesBaseName = config.mod_name

repositories {
    maven { url = "http://mvn.rx14.co.uk/shadowfacts/" }
}

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

configurations {
    shade
    compile.extendsFrom shade
}

minecraft {
    version = "${config.mc_version}-${config.forge_version}"
    runDir = "run"
    mappings = config.mc_mappings
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_ver"
    compile "net.shadowfacts:Forgelin:1.4.1"

    shade "org.jetbrains:annotations:$annotations_version"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    // Shading
    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

static def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}